(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)
(set-option :smt.mbqi false)
(define-sort SMT_Elt () Int)
(define-sort SMT_Set () (Array SMT_Elt Bool))
(define-fun smt_set_emp () SMT_Set ((as const SMT_Set) false))
(define-fun smt_set_mem ((x SMT_Elt) (s SMT_Set)) Bool (select s x))
(define-fun smt_set_add ((s SMT_Set) (x SMT_Elt)) SMT_Set (store s x true))
(define-fun smt_set_cup ((s1 SMT_Set) (s2 SMT_Set)) SMT_Set ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 SMT_Set) (s2 SMT_Set)) SMT_Set ((_ map and) s1 s2))
(define-fun smt_set_com ((s SMT_Set)) SMT_Set ((_ map not) s))
(define-fun smt_set_dif ((s1 SMT_Set) (s2 SMT_Set)) SMT_Set (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 SMT_Set) (s2 SMT_Set)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort SMT_Map () (Array SMT_Elt SMT_Elt))
(define-fun smt_map_sel ((m SMT_Map) (k SMT_Elt)) SMT_Elt (select m k))
(define-fun smt_map_sto ((m SMT_Map) (k SMT_Elt) (v SMT_Elt)) SMT_Map (store m k v))
(declare-fun z3v65 () Int)
(declare-fun z3v66 () Int)
(declare-fun z3v67 () Int)
(declare-fun z3v68 () Int)
(assert (distinct z3v65 z3v66 z3v67 z3v68))
(declare-fun z3v69 () Int)
(declare-fun z3v70 () Int)
(assert (distinct z3v69 z3v70))
(declare-fun z3v71 () Int)
(declare-fun z3f72 (Int) Bool)
(declare-fun z3v73 () Int)
(declare-fun z3v74 () Int)
(declare-fun z3f75 (Int) Int)
(declare-fun z3v76 () Int)
(declare-fun z3v77 () Int)
(declare-fun z3v78 () Int)
(declare-fun z3v79 () Int)
(declare-fun z3v80 () Int)
(declare-fun z3v81 () Int)
(declare-fun z3v82 () Int)
(declare-fun z3v83 () Int)
(declare-fun z3v84 () Int)
(push 1)
(assert (z3f72 z3v84))
(assert (= (z3f72 z3v83) (= z3v81 z3v82)))
(assert (= z3v82 2))
(assert (= z3v81 (+ z3v79 z3v80)))
(assert (= z3v80 1))
(assert (= z3v79 1))
(assert (z3f72 z3v78))
(assert (z3f72 z3v69))
(assert (= (z3f75 z3v77) z3v77))
(assert (= (z3f75 z3v76) z3v76))
(assert (not (z3f72 z3v70)))
(assert (= (z3f75 z3v74) z3v74))
(assert (z3f72 z3v73))
(assert (z3f72 z3v71))
(push 1)
(assert (not (not (z3f72 z3v84))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v84 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v84 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v84 z3v73)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v84 z3v71)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v84 z3v69))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v84 z3v70))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v84 z3v73))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v84 z3v71))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v84 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v84 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v84 z3v73)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v84 z3v71)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v84 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v84 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v84 z3v73)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v84 z3v71)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v84 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v84 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v84 z3v73)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v84 z3v71)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v84 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v84 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v84 z3v73)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v84 z3v71)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v85 () Int)
(declare-fun z3v86 () Int)
(declare-fun z3v87 () Int)
(declare-fun z3v88 () Int)
(declare-fun z3v89 () Int)
(declare-fun z3v90 () Int)
(declare-fun z3v91 () Int)
(declare-fun z3v92 () Int)
(push 1)
(assert (z3f72 z3v92))
(assert (= (z3f72 z3v91) (= z3v89 z3v90)))
(assert (= z3v90 3))
(assert (= z3v89 (+ z3v87 z3v88)))
(assert (= z3v88 1))
(assert (= z3v87 2))
(assert (z3f72 z3v86))
(assert (z3f72 z3v69))
(assert (= (z3f75 z3v77) z3v77))
(assert (= (z3f75 z3v76) z3v76))
(assert (not (z3f72 z3v70)))
(assert (= (z3f75 z3v74) z3v74))
(assert (z3f72 z3v73))
(assert (z3f72 z3v71))
(assert (z3f72 z3v85))
(assert (not (= z3v85 z3v70)))
(push 1)
(assert (not (not (z3f72 z3v92))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v92 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v92 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v92 z3v85)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v92 z3v73)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= z3v92 z3v71)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v92 z3v69))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v92 z3v70))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v92 z3v85))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v92 z3v73))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= z3v92 z3v71))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v92 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v92 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v92 z3v85)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v92 z3v73)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= z3v92 z3v71)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v92 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v92 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v92 z3v85)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v92 z3v73)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<  z3v92 z3v71)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v92 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v92 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v92 z3v85)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v92 z3v73)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= z3v92 z3v71)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v92 z3v69)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v92 z3v70)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v92 z3v85)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v92 z3v73)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>  z3v92 z3v71)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v93 () Int)
(declare-fun z3v94 () Int)
(declare-fun z3v95 () Int)
(declare-fun z3v96 () Int)
(declare-fun z3v97 () Int)
(declare-fun z3v98 () Int)
(push 1)
(assert (= (z3f72 z3v98) (= z3v94 z3v93)))
(assert (= z3v97 1))
(assert (= z3v93 3))
(assert (= z3v94 (+ z3v97 z3v96)))
(assert (= z3v96 2))
(assert (= (z3f72 z3v95) (= z3v94 z3v93)))
(assert (z3f72 z3v69))
(assert (= (z3f75 z3v77) z3v77))
(assert (= (z3f75 z3v76) z3v76))
(assert (not (z3f72 z3v70)))
(assert (= (z3f75 z3v74) z3v74))
(push 1)
(assert (not (z3f72 z3v98)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v99 () Int)
(declare-fun z3v100 () Int)
(declare-fun z3v101 () Int)
(declare-fun z3v102 () Int)
(declare-fun z3v103 () Int)
(declare-fun z3v104 () Int)
(push 1)
(assert (= (z3f72 z3v104) (= z3v100 z3v99)))
(assert (= z3v99 2))
(assert (= z3v100 (+ z3v102 z3v103)))
(assert (= z3v103 1))
(assert (= z3v102 1))
(assert (= (z3f72 z3v101) (= z3v100 z3v99)))
(assert (z3f72 z3v69))
(assert (= (z3f75 z3v77) z3v77))
(assert (= (z3f75 z3v76) z3v76))
(assert (not (z3f72 z3v70)))
(assert (= (z3f75 z3v74) z3v74))
(assert (z3f72 z3v71))
(push 1)
(assert (not (z3f72 z3v104)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v105 () Int)
(declare-fun z3v106 () Int)
(declare-fun z3f107 (Int) Int)
(declare-fun z3v108 () Int)
(declare-fun z3v109 () Int)
(declare-fun z3v110 () Int)
(declare-fun z3f111 (Int) Int)
(declare-fun z3v112 () Int)
(push 1)
(assert (>= (z3f107 z3v112) 0))
(assert (= z3v112 z3v105))
(assert (>= (z3f107 z3v105) 0))
(assert (= (z3f107 z3v105) (z3f111 z3v110)))
(assert (= z3v105 z3v110))
(assert (= (z3f111 z3v110) 13))
(assert (= z3v110 z3v68))
(assert (not (z3f72 z3v109)))
(assert (not (z3f72 z3v109)))
(assert (not (z3f72 z3v109)))
(assert (= z3v109 z3v108))
(assert (z3f72 z3v108))
(assert (>= (z3f107 z3v106) 0))
(assert (= z3v106 z3v105))
(assert (z3f72 z3v69))
(assert (= (z3f75 z3v77) z3v77))
(assert (= (z3f75 z3v76) z3v76))
(assert (not (z3f72 z3v70)))
(assert (= (z3f75 z3v74) z3v74))
(assert (z3f72 z3v73))
(assert (z3f72 z3v71))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
(pop 1)
(push 1)
(assert false)
(assert (>= (z3f107 z3v105) 0))
(assert (= (z3f107 z3v105) (z3f111 z3v110)))
(assert (= z3v105 z3v110))
(assert (= (z3f111 z3v110) 13))
(assert (= z3v110 z3v68))
(assert (not (z3f72 z3v109)))
(assert (not (z3f72 z3v109)))
(assert (not (z3f72 z3v109)))
(assert (= z3v109 z3v108))
(assert (z3f72 z3v108))
(assert (z3f72 z3v69))
(assert (= (z3f75 z3v77) z3v77))
(assert (= (z3f75 z3v76) z3v76))
(assert (not (z3f72 z3v70)))
(assert (= (z3f75 z3v74) z3v74))
(assert (z3f72 z3v73))
(assert (z3f72 z3v71))
(assert false)
(declare-fun z3v113 () Int)
(push 1)
(assert (not (z3f72 z3v113)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v114 () Int)
(declare-fun z3v115 () Int)
(push 1)
(assert (= z3v115 z3v69))
(assert (z3f72 z3v109))
(assert (z3f72 z3v109))
(assert (z3f72 z3v109))
(assert (= z3v109 z3v108))
(assert (z3f72 z3v108))
(assert (= z3v114 z3v69))
(assert (z3f72 z3v69))
(assert (= (z3f75 z3v77) z3v77))
(assert (= (z3f75 z3v76) z3v76))
(assert (not (z3f72 z3v70)))
(assert (= (z3f75 z3v74) z3v74))
(assert (z3f72 z3v73))
(assert (z3f72 z3v71))
(push 1)
(assert (not (z3f72 z3v115)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v116 () Int)
(declare-fun z3v117 () Int)
(push 1)
(assert (= z3v117 z3v83))
(assert (= (z3f72 z3v83) (= z3v81 z3v82)))
(assert (= z3v82 2))
(assert (= z3v81 (+ z3v79 z3v80)))
(assert (= z3v80 1))
(assert (= z3v79 1))
(assert (= z3v116 z3v83))
(assert (z3f72 z3v69))
(assert (= (z3f75 z3v77) z3v77))
(assert (= (z3f75 z3v76) z3v76))
(assert (not (z3f72 z3v70)))
(assert (= (z3f75 z3v74) z3v74))
(assert (z3f72 z3v73))
(assert (z3f72 z3v71))
(push 1)
(assert (not (z3f72 z3v117)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v118 () Int)
(push 1)
(assert (z3f72 z3v118))
(assert (= (z3f72 z3v83) (= z3v81 z3v82)))
(assert (= z3v82 2))
(assert (= z3v81 (+ z3v79 z3v80)))
(assert (= z3v80 1))
(assert (= z3v79 1))
(assert (z3f72 z3v78))
(assert (z3f72 z3v69))
(assert (= (z3f75 z3v77) z3v77))
(assert (= (z3f75 z3v76) z3v76))
(assert (not (z3f72 z3v70)))
(assert (= (z3f75 z3v74) z3v74))
(assert (z3f72 z3v73))
(assert (z3f72 z3v71))
(push 1)
(assert (not (and (z3f72 z3v118) (not (= z3v118 z3v70)))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v119 () Int)
(declare-fun z3v120 () Int)
(push 1)
(assert (= z3v120 z3v91))
(assert (= (z3f72 z3v91) (= z3v89 z3v90)))
(assert (= z3v90 3))
(assert (= z3v89 (+ z3v87 z3v88)))
(assert (= z3v88 1))
(assert (= z3v87 2))
(assert (= z3v119 z3v91))
(assert (z3f72 z3v69))
(assert (= (z3f75 z3v77) z3v77))
(assert (= (z3f75 z3v76) z3v76))
(assert (not (z3f72 z3v70)))
(assert (= (z3f75 z3v74) z3v74))
(assert (z3f72 z3v73))
(assert (z3f72 z3v71))
(assert (not (= z3v85 z3v70)))
(assert (z3f72 z3v85))
(push 1)
(assert (not (z3f72 z3v120)))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v121 () Int)
(push 1)
(assert (z3f72 z3v121))
(assert (= (z3f72 z3v91) (= z3v89 z3v90)))
(assert (= z3v90 3))
(assert (= z3v89 (+ z3v87 z3v88)))
(assert (= z3v88 1))
(assert (= z3v87 2))
(assert (z3f72 z3v86))
(assert (z3f72 z3v69))
(assert (= (z3f75 z3v77) z3v77))
(assert (= (z3f75 z3v76) z3v76))
(assert (not (z3f72 z3v70)))
(assert (= (z3f75 z3v74) z3v74))
(assert (z3f72 z3v73))
(assert (z3f72 z3v71))
(assert (not (= z3v85 z3v70)))
(assert (z3f72 z3v85))
(push 1)
(assert (not (and (z3f72 z3v121) (not (= z3v121 z3v70)))))
(check-sat)
(pop 1)
(pop 1)
(declare-fun z3v122 () Int)
(declare-fun z3v123 () Int)
(declare-fun z3v124 () Int)
(declare-fun z3v125 () Int)
(declare-fun z3v126 () Int)
(declare-fun z3v127 () Int)
(declare-fun z3v128 () Int)
(declare-fun z3v129 () Int)
(declare-fun z3v130 () Int)
(push 1)
(assert (>= (z3f107 z3v130) 0))
(assert (= z3v130 z3v123))
(assert (>= (z3f107 z3v123) 0))
(assert (= (z3f107 z3v123) (z3f111 z3v129)))
(assert (= z3v123 z3v129))
(assert (= (z3f111 z3v129) 19))
(assert (= z3v129 z3v65))
(assert (= z3v128 0))
(assert (= z3v128 z3v127))
(assert (= z3v126 z3v127))
(assert (= z3v126 z3v127))
(assert (= z3v126 z3v127))
(assert (= z3v126 z3v125))
(assert (not (= z3v125 0)))
(assert (>= (z3f107 z3v124) 0))
(assert (= z3v124 z3v123))
(assert (z3f72 z3v69))
(assert (= (z3f75 z3v77) z3v77))
(assert (= (z3f75 z3v76) z3v76))
(assert (not (z3f72 z3v70)))
(assert (= (z3f75 z3v74) z3v74))
(assert (z3f72 z3v73))
(assert (z3f72 z3v71))
(assert (not (= z3v85 z3v70)))
(assert (z3f72 z3v85))
(assert (not (= z3v122 z3v70)))
(assert (z3f72 z3v122))
(push 1)
(assert (not false))
(check-sat)
(pop 1)
(pop 1)
