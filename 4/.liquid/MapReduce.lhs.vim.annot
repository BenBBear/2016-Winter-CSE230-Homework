25:1-25:10::MapReduce.mapReduce :: "(GHC.Classes.Ord b) =>\n(a -> (List.List (b, c))) -> (c -> c -> c) -> (List.List a) -> (Data.Map.Base.Map b c)"
25:11-25:13::fm :: "a -> (List.List (b, c))"
25:14-25:16::fr :: "a -> a -> a"
25:17-25:19::xs :: "(List.List a)"
25:22-25:25::kvm :: "{v : (Data.Map.Base.Map a b) | v == kvm}"
27:5-27:8::kvs :: "(List.List (a, b))"
27:13-27:27::_ :: "(List.List a) -> (List.List (b, c))"
27:25-27:27::fm :: "a -> (List.List (b, c))"
27:28-27:30::xs :: "{v : (List.List a) | v == xs}"
28:5-28:9::kvsm :: "(Data.Map.Base.Map a {v : (List.List b) | size v > 0})"
28:13-28:18::_ :: "(List.List (a, b)) -> (Data.Map.Base.Map a {v : (List.List b) | size v > 0})"
28:25-28:28::kvs :: "{v : (List.List (a, b)) | v == kvs}"
29:5-29:8::kvm :: "(Data.Map.Base.Map a b)"
29:13-29:24::_ :: "(Data.Map.Base.Map a {v : (List.List b) | size v > 0}) -> (Data.Map.Base.Map a b)"
29:22-29:24::fr :: "a -> a -> a"
29:25-29:29::kvsm :: "{v : (Data.Map.Base.Map a {v : (List.List b) | size v > 0}) | v == kvsm}"
49:1-49:7::MapReduce.expand :: "(a -> (List.List (b, c))) -> (List.List a) -> (List.List (b, c))"
49:8-49:9::f :: "a -> (List.List (b, c))"
49:10-49:12::xs :: "(List.List a)"
49:22-49:32::lq_anf__d1O3 :: "(List.List (List.List (a, b)))"
49:23-49:28::_ :: "x1:(List.List a) -> {v : (List.List (List.List (b, c))) | size v == size x1}"
49:27-49:28::f :: "a -> (List.List (b, c))"
49:29-49:31::xs :: "{v : (List.List a) | v == xs}"
57:1-57:6::MapReduce.group :: "(GHC.Classes.Ord a) =>\n(List.List (a, b)) -> (Data.Map.Base.Map a {l : (List.List b) | size l > 0})"
57:13-57:24::_ :: "(Data.Map.Base.Map a {v : (List.List b) | size v > 0}) -> (List.List (a, b)) -> (Data.Map.Base.Map a {v : (List.List b) | size v > 0})"
57:19-57:24::lq_anf__d1O1 :: "(a, b) -> (Data.Map.Base.Map a {v : (List.List b) | size v > 0}) -> (Data.Map.Base.Map a {v : (List.List b) | size v > 0})"
57:26-57:33::_ :: "(Data.Map.Base.Map a b)"
59:1-59:6::MapReduce.addKV :: "(GHC.Classes.Ord b) =>\n(b, a) -> (Data.Map.Base.Map b {VV : (List.List a) | size VV > 0}) -> (Data.Map.Base.Map b {VV : (List.List a) | size VV > 0})"
59:13-59:14::m :: "(Data.Map.Base.Map a {VV : (List.List b) | size VV > 0})"
59:17-59:25::_ :: "a -> {v : (List.List b) | size v > 0} -> (Data.Map.Base.Map a {v : (List.List b) | size v > 0}) -> (Data.Map.Base.Map a {v : (List.List b) | size v > 0})"
59:26-59:27::k :: "{VV : a | VV == k}"
59:28-59:31::vs' :: "{v : (List.List a) | v == vs'}"
59:32-59:33::m :: "{v : (Data.Map.Base.Map a {v : (List.List b) | size v > 0}) | v == m}"
61:5-61:8::vs' :: "(List.List a)"
61:17-61:22::_ :: "x1:(List.List a) -> {v : (List.List a) | size v == 1 + size x1}"
61:21-61:22::v :: "{VV : a | VV == v}"
61:23-61:52::lq_anf__d1O0 :: "(List.List a)"
61:24-61:41::_ :: "(List.List a) -> b -> (Data.Map.Base.Map b (List.List a)) -> (List.List a)"
61:42-61:47::_ :: "{v : (List.List a) | size v == 0}"
61:48-61:49::k :: "{VV : a | VV == k}"
61:50-61:51::m :: "{v : (Data.Map.Base.Map a {v : (List.List b) | size v > 0}) | v == m}"
69:1-69:9::MapReduce.collapse :: "(a -> a -> a) -> (Data.Map.Base.Map b {l : (List.List a) | size l > 0}) -> (Data.Map.Base.Map b a)"
69:10-69:11::f :: "a -> a -> a"
69:20-69:30::lq_anf__d1NX :: "{v : (List.List a) | size v > 0} -> a"
69:28-69:29::f :: "a -> a -> a"
72:1-72:7::MapReduce.toList :: "(Data.Map.Base.Map a b) -> (List.List (a, b))"
72:10-72:53::_ :: "(List.List (a, b)) -> (Data.Map.Base.Map a b) -> (List.List (a, b))"
72:27-72:28::k :: "a"
72:29-72:30::v :: "a"
72:31-72:34::acc :: "(List.List (a, b))"
72:38-72:48::_ :: "x1:(List.List (a, b)) -> {v : (List.List (a, b)) | size v == 1 + size x1}"
72:42-72:48::lq_anf__d1NU :: "(a, b)"
72:43-72:44::k :: "{VV : a | VV == k}"
72:46-72:47::v :: "{VV : a | VV == v}"
72:49-72:52::acc :: "{v : (List.List (a, b)) | v == acc}"
72:54-72:59::_ :: "{v : (List.List a) | size v == 0}"